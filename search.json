[{"path":[]},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement jonthegeek@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://r4ds.github.io/cookies/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://r4ds.github.io/cookies/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to cookies","title":"Contributing to cookies","text":"outlines propose change cookies.","code":""},{"path":"https://r4ds.github.io/cookies/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to cookies","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://r4ds.github.io/cookies/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to cookies","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://r4ds.github.io/cookies/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to cookies","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"r4ds/cookies\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://r4ds.github.io/cookies/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to cookies","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. Prefix unexported functions ., .unexported_function. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://r4ds.github.io/cookies/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to cookies","text":"Please note cookies project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://r4ds.github.io/cookies/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 cookies authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://r4ds.github.io/cookies/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jon Harmon. Author, maintainer, copyright holder. Klaus Hartl. Copyright holder.            js-cookie JavaScript library Fagner Brack. Copyright holder.            js-cookie JavaScript library","code":""},{"path":"https://r4ds.github.io/cookies/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harmon J (2023). cookies: Use Browser Cookies 'shiny'. https://github.com/r4ds/cookies, https://r4ds.github.io/cookies/.","code":"@Manual{,   title = {cookies: Use Browser Cookies with 'shiny'},   author = {Jon Harmon},   year = {2023},   note = {https://github.com/r4ds/cookies, https://r4ds.github.io/cookies/}, }"},{"path":"https://r4ds.github.io/cookies/index.html","id":"cookies-","dir":"","previous_headings":"","what":"Use Browser Cookies with shiny","title":"Use Browser Cookies with shiny","text":"Cookies name-value pairs saved user’s browser website. Cookies allow websites persist information user use website. goal {cookies} make easy possible use cookies shiny apps.","code":""},{"path":"https://r4ds.github.io/cookies/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Use Browser Cookies with shiny","text":"Install released version {cookies} CRAN: install development version {cookies} GitHub :","code":"install.packages(\"cookies\") # install.packages(\"remotes\") remotes::install_github(\"r4ds/cookies\")"},{"path":"https://r4ds.github.io/cookies/index.html","id":"use-cases","dir":"","previous_headings":"","what":"Use Cases","title":"Use Browser Cookies with shiny","text":"Several potential use cases motivated creation package.","code":""},{"path":"https://r4ds.github.io/cookies/index.html","id":"saving-settings","dir":"","previous_headings":"Use Cases","what":"Saving Settings","title":"Use Browser Cookies with shiny","text":"general, cookies can used save sort setting user. allows restore state (otherwise know something user) next time load app. ’ll use simple example demonstrate concept. run code, make selections, refresh browser, see first slider remembered, second .","code":"library(cookies) library(shiny)  # Wrap your ui with add_cookie_handlers() to enable cookies. ui <- add_cookie_handlers(   fluidPage(     titlePanel(\"A Simple App\"),     fluidRow(       sliderInput(         \"number_selector\",         label = paste(           \"Select a number.\",           \"This selector sets the cookie value.\",           \"It also initializes with the cookie value.\",           \"Refresh to see it remembered.\",           sep = \"\\n\"         ),         min = 1,         max = 10,         value = 1       ),       sliderInput(         \"number_selector_no_cookie\",         label = paste(           \"Select a number.\",           \"This one is not connected to the cookie.\",           \"When you refresh, it will always initialize to 1.\",           sep = \"\\n\"         ),         min = 1,         max = 10,         value = 1       )     )   ) )  server <- function(input, output, session) {   # When the value changes, set a cookie.   observeEvent(     input$number_selector,     {       set_cookie(         cookie_name = \"selected_number\",         cookie_value = input$number_selector       )     }   )    # Initialize the top slider from any cookies that come in at the start.   observeEvent(     get_cookie(\"selected_number\"),     updateSliderInput(       inputId = \"number_selector\",       value = get_cookie(\"selected_number\")     ),     once = TRUE   ) }  shinyApp(   ui,   server,   # Cookies only work in an actual browser.   options = list(     launch.browser = TRUE   ) )"},{"path":"https://r4ds.github.io/cookies/index.html","id":"other-use-cases","dir":"","previous_headings":"Use Cases","what":"Other Use Cases","title":"Use Browser Cookies with shiny","text":"Authentication: motivating use case package. can see working example can implemented {shinyslack}. Last visit: log datestamp page loads (transfer existing value another variable another cookie) , example, notify users new features since last visit. Many others: use case aren’t certain implement , please open issue!","code":""},{"path":"https://r4ds.github.io/cookies/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Use Browser Cookies with shiny","text":"Please note cookies project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://r4ds.github.io/cookies/reference/add_cookie_handlers.html","id":null,"dir":"Reference","previous_headings":"","what":"Add cookies to an existing shiny ui — add_cookie_handlers","title":"Add cookies to an existing shiny ui — add_cookie_handlers","text":"Wrap shiny ui function order add cookie-handling functionality. ui can defined format compatible shiny, using functions shiny::fluidPage(), shiny::bootstrapPage(), shiny::htmlTemplate(), raw HTML string.","code":""},{"path":"https://r4ds.github.io/cookies/reference/add_cookie_handlers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add cookies to an existing shiny ui — add_cookie_handlers","text":"","code":"add_cookie_handlers(ui)"},{"path":"https://r4ds.github.io/cookies/reference/add_cookie_handlers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add cookies to an existing shiny ui — add_cookie_handlers","text":"ui 0- 1-argument function defining ui shiny app, shiny::tagList().","code":""},{"path":"https://r4ds.github.io/cookies/reference/add_cookie_handlers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add cookies to an existing shiny ui — add_cookie_handlers","text":"object signature input ui, dependencies needed handle cookies. ui shiny::tagList(), shiny::tagList() returned; ui function, function returned.","code":""},{"path":"https://r4ds.github.io/cookies/reference/add_cookie_handlers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add cookies to an existing shiny ui — add_cookie_handlers","text":"","code":"str(add_cookie_handlers(\"example\")) #> List of 2 #>  $ :List of 2 #>   ..$ :List of 10 #>   .. ..$ name      : chr \"js-cookie\" #>   .. ..$ version   : chr \"3.0.1\" #>   .. ..$ src       :List of 2 #>   .. .. ..$ href: chr \"https://cdn.jsdelivr.net/npm/js-cookie/dist/\" #>   .. .. ..$ file: chr \"js\" #>   .. ..$ meta      : NULL #>   .. ..$ script    : chr \"js.cookie.min.js\" #>   .. ..$ stylesheet: NULL #>   .. ..$ head      : NULL #>   .. ..$ attachment: NULL #>   .. ..$ package   : chr \"cookies\" #>   .. ..$ all_files : logi TRUE #>   .. ..- attr(*, \"class\")= chr \"html_dependency\" #>   ..$ :List of 10 #>   .. ..$ name      : chr \"cookie_input\" #>   .. ..$ version   : chr \"1.0.0\" #>   .. ..$ src       :List of 1 #>   .. .. ..$ file: chr \"js\" #>   .. ..$ meta      : NULL #>   .. ..$ script    : chr \"cookie_input.js\" #>   .. ..$ stylesheet: NULL #>   .. ..$ head      : NULL #>   .. ..$ attachment: NULL #>   .. ..$ package   : chr \"cookies\" #>   .. ..$ all_files : logi TRUE #>   .. ..- attr(*, \"class\")= chr \"html_dependency\" #>  $ : chr \"example\" #>  - attr(*, \"class\")= chr [1:2] \"shiny.tag.list\" \"list\""},{"path":"https://r4ds.github.io/cookies/reference/cookie_dependency.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach the js-cookie javascript library for shiny — cookie_dependency","title":"Attach the js-cookie javascript library for shiny — cookie_dependency","text":"Add js-cookie Javascript library HTML dependency, make cookies available shiny input object.","code":""},{"path":"https://r4ds.github.io/cookies/reference/cookie_dependency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach the js-cookie javascript library for shiny — cookie_dependency","text":"","code":"cookie_dependency()"},{"path":"https://r4ds.github.io/cookies/reference/cookie_dependency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach the js-cookie javascript library for shiny — cookie_dependency","text":"htmltools::htmlDependency(), shiny uses add js-cookie Javascript library exactly .","code":""},{"path":"https://r4ds.github.io/cookies/reference/cookie_dependency.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Attach the js-cookie javascript library for shiny — cookie_dependency","text":"Call function within shiny ui attach necessary JavaScript code.","code":""},{"path":"https://r4ds.github.io/cookies/reference/cookie_dependency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attach the js-cookie javascript library for shiny — cookie_dependency","text":"","code":"cookie_dependency() #> [[1]] #> List of 10 #>  $ name      : chr \"js-cookie\" #>  $ version   : chr \"3.0.1\" #>  $ src       :List of 2 #>   ..$ href: chr \"https://cdn.jsdelivr.net/npm/js-cookie/dist/\" #>   ..$ file: chr \"js\" #>  $ meta      : NULL #>  $ script    : chr \"js.cookie.min.js\" #>  $ stylesheet: NULL #>  $ head      : NULL #>  $ attachment: NULL #>  $ package   : chr \"cookies\" #>  $ all_files : logi TRUE #>  - attr(*, \"class\")= chr \"html_dependency\" #>  #> [[2]] #> List of 10 #>  $ name      : chr \"cookie_input\" #>  $ version   : chr \"1.0.0\" #>  $ src       :List of 1 #>   ..$ file: chr \"js\" #>  $ meta      : NULL #>  $ script    : chr \"cookie_input.js\" #>  $ stylesheet: NULL #>  $ head      : NULL #>  $ attachment: NULL #>  $ package   : chr \"cookies\" #>  $ all_files : logi TRUE #>  - attr(*, \"class\")= chr \"html_dependency\" #>"},{"path":"https://r4ds.github.io/cookies/reference/cookies-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cookies: Use Browser Cookies with 'shiny' — cookies-package","title":"cookies: Use Browser Cookies with 'shiny' — cookies-package","text":"Browser cookies name-value pairs saved user's browser website. Cookies allow websites persist information user use website. provide tools working cookies 'shiny' apps, part wrapping 'js-cookie' JavaScript library https://github.com/js-cookie/js-cookie.","code":""},{"path":[]},{"path":"https://r4ds.github.io/cookies/reference/cookies-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cookies: Use Browser Cookies with 'shiny' — cookies-package","text":"Maintainer: Jon Harmon jonthegeek@gmail.com (ORCID) [copyright holder] contributors: Klaus Hartl (js-cookie JavaScript library) [copyright holder] Fagner Brack (js-cookie JavaScript library) [copyright holder]","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-attributes_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Condense attributes to a string — .attributes_string","title":"Condense attributes to a string — .attributes_string","text":"Condense attributes string","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-attributes_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Condense attributes to a string — .attributes_string","text":"","code":".attributes_string(expiration, secure_only, domain, path, same_site, http_only)"},{"path":"https://r4ds.github.io/cookies/reference/dot-attributes_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Condense attributes to a string — .attributes_string","text":"expiration Days cookie expire. remove HttpOnly cookie, send negative value attribute. secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost). domain host cookie sent (including subdomains). NULL (default) cookie sent host page cookie set (including subdomains). path path must exist requested URL browser send cookie. Includes subdirectories. same_site One \"strict\", \"lax\" (default), \"none\", indicating cookie sent. same_site = \"none\", secure_only must TRUE. http_only Logical indicating whether cookie sent part HTTP request. FALSE (default), cookie accessible JavaScript via Document.cookie property.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-attributes_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Condense attributes to a string — .attributes_string","text":"string format like \"Domain=domain-value; Secure; HttpOnly\".","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-generate_http_attribute_strings.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the separate attribute strings — .generate_http_attribute_strings","title":"Generate the separate attribute strings — .generate_http_attribute_strings","text":"Generate separate attribute strings","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-generate_http_attribute_strings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the separate attribute strings — .generate_http_attribute_strings","text":"","code":".generate_http_attribute_strings(http_attributes)"},{"path":"https://r4ds.github.io/cookies/reference/dot-generate_http_attribute_strings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the separate attribute strings — .generate_http_attribute_strings","text":"http_attributes list attributes names expected Set-Cookie.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-generate_http_attribute_strings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the separate attribute strings — .generate_http_attribute_strings","text":"character vector either names (Secure HttpOnly) name=value pairs.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-http_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare cookie attributes for HTTP — .http_attributes","title":"Prepare cookie attributes for HTTP — .http_attributes","text":"Prepare cookie attributes HTTP","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-http_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare cookie attributes for HTTP — .http_attributes","text":"","code":".http_attributes(expiration, secure_only, domain, path, same_site, http_only)"},{"path":"https://r4ds.github.io/cookies/reference/dot-http_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare cookie attributes for HTTP — .http_attributes","text":"expiration Days cookie expire. remove HttpOnly cookie, send negative value attribute. secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost). domain host cookie sent (including subdomains). NULL (default) cookie sent host page cookie set (including subdomains). path path must exist requested URL browser send cookie. Includes subdirectories. same_site One \"strict\", \"lax\" (default), \"none\", indicating cookie sent. same_site = \"none\", secure_only must TRUE. http_only Logical indicating whether cookie sent part HTTP request. FALSE (default), cookie accessible JavaScript via Document.cookie property.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-http_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare cookie attributes for HTTP — .http_attributes","text":"list attributes ready HTTP.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-http_cookie_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Condense cookie attributes to a set-cookie string — .http_cookie_string","title":"Condense cookie attributes to a set-cookie string — .http_cookie_string","text":"Condense cookie attributes set-cookie string","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-http_cookie_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Condense cookie attributes to a set-cookie string — .http_cookie_string","text":"","code":".http_cookie_string(   cookie_name,   cookie_value,   expiration,   secure_only,   domain,   path,   same_site,   http_only )"},{"path":"https://r4ds.github.io/cookies/reference/dot-http_cookie_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Condense cookie attributes to a set-cookie string — .http_cookie_string","text":"cookie_name name cookie. Can contain US-ASCII characters except : control character, space, tab, separator characters like ( ) < > @ , ; : \\ \" / [ ] ? = { }. cookie_value contents cookie single character value. expiration Days cookie expire. remove HttpOnly cookie, send negative value attribute. secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost). domain host cookie sent (including subdomains). NULL (default) cookie sent host page cookie set (including subdomains). path path must exist requested URL browser send cookie. Includes subdirectories. same_site One \"strict\", \"lax\" (default), \"none\", indicating cookie sent. same_site = \"none\", secure_only must TRUE. http_only Logical indicating whether cookie sent part HTTP request. FALSE (default), cookie accessible JavaScript via Document.cookie property.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-http_cookie_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Condense cookie attributes to a set-cookie string — .http_cookie_string","text":"string form \"Set-Cookie: cookie-name=cookie-value; Expires=date\", etc.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-http_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert expiration days to the expected date format — .http_date","title":"Convert expiration days to the expected date format — .http_date","text":"Convert expiration days expected date format","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-http_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert expiration days to the expected date format — .http_date","text":"","code":".http_date(expiration)"},{"path":"https://r4ds.github.io/cookies/reference/dot-http_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert expiration days to the expected date format — .http_date","text":"expiration Days cookie expire. remove HttpOnly cookie, send negative value attribute.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-http_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert expiration days to the expected date format — .http_date","text":"string date required format.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-is_http_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this cookie HttpOnly? — .is_http_only","title":"Is this cookie HttpOnly? — .is_http_only","text":"HttpOnly cookies manipulated via javascript.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-is_http_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this cookie HttpOnly? — .is_http_only","text":"","code":".is_http_only(cookie_name, session = shiny::getDefaultReactiveDomain())"},{"path":"https://r4ds.github.io/cookies/reference/dot-is_http_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is this cookie HttpOnly? — .is_http_only","text":"cookie_name cookie check. session Shiny session cookies can found (default probably always used).","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-is_http_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is this cookie HttpOnly? — .is_http_only","text":"logical indicating whether cookie_name http-.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-javascript_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare cookie attributes for javascript — .javascript_attributes","title":"Prepare cookie attributes for javascript — .javascript_attributes","text":"Prepare cookie attributes javascript","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-javascript_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare cookie attributes for javascript — .javascript_attributes","text":"","code":".javascript_attributes(expiration, secure_only, domain, path, same_site)"},{"path":"https://r4ds.github.io/cookies/reference/dot-javascript_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare cookie attributes for javascript — .javascript_attributes","text":"expiration Days cookie expire. remove HttpOnly cookie, send negative value attribute. secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost). domain host cookie sent (including subdomains). NULL (default) cookie sent host page cookie set (including subdomains). path path must exist requested URL browser send cookie. Includes subdirectories. same_site One \"strict\", \"lax\" (default), \"none\", indicating cookie sent. same_site = \"none\", secure_only must TRUE.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-javascript_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare cookie attributes for javascript — .javascript_attributes","text":"list attributes names expected js-cookie.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-root_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the main session — .root_session","title":"Find the main session — .root_session","text":"function escapes module (submodule, etc) find root session.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-root_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the main session — .root_session","text":"","code":".root_session(session = shiny::getDefaultReactiveDomain())"},{"path":"https://r4ds.github.io/cookies/reference/dot-root_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the main session — .root_session","text":"session session object. Probably always use default.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-root_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the main session — .root_session","text":"first session \"session_proxy\".","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-shared-parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters used in multiple functions — .shared-parameters","title":"Parameters used in multiple functions — .shared-parameters","text":"parameters likely show multiple functions, gather definitions one easy--find place.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-shared-parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters used in multiple functions — .shared-parameters","text":"attributes list values expiration, secure_only, domain, path, same_site, http_only cookie_name name cookie. Can contain US-ASCII characters except : control character, space, tab, separator characters like ( ) < > @ , ; : \\ \" / [ ] ? = { }. cookie_value contents cookie single character value. domain host cookie sent (including subdomains). NULL (default) cookie sent host page cookie set (including subdomains). expiration Days cookie expire. remove HttpOnly cookie, send negative value attribute. http_only Logical indicating whether cookie sent part HTTP request. FALSE (default), cookie accessible JavaScript via Document.cookie property. path path must exist requested URL browser send cookie. Includes subdirectories. same_site One \"strict\", \"lax\" (default), \"none\", indicating cookie sent. same_site = \"none\", secure_only must TRUE. secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost). session Shiny session cookies can found (default probably always used). ui 0- 1-argument function defining ui shiny app, shiny::tagList().","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-shiny_toJSON.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep data for javascript — .shiny_toJSON","title":"Prep data for javascript — .shiny_toJSON","text":"unexported function shiny, directly copy/pasted (name documentation). function formats things way shiny's JS functions expect.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-shiny_toJSON.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep data for javascript — .shiny_toJSON","text":"","code":".shiny_toJSON(   x,   ...,   dataframe = \"columns\",   null = \"null\",   na = \"null\",   auto_unbox = TRUE,   digits = getOption(\"shiny.json.digits\", 16),   use_signif = TRUE,   force = TRUE,   POSIXt = \"ISO8601\",   UTC = TRUE,   rownames = FALSE,   keep_vec_names = TRUE,   strict_atomic = TRUE )"},{"path":"https://r4ds.github.io/cookies/reference/dot-shiny_toJSON.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep data for javascript — .shiny_toJSON","text":"x object encoded ... Arguments passed jsonlite::toJSON matrix encode matrices higher dimensional arrays: must one 'rowmajor' 'columnmajor'. Date encode Date objects: must one 'ISO8601' 'epoch' factor encode factor objects: must one 'string' 'integer' complex encode complex numbers: must one 'string' 'list' raw encode raw objects: must one 'base64', 'hex' 'mongo' pretty adds indentation whitespace JSON output. Can TRUE/FALSE number specifying number spaces indent. See prettify() dataframe encode data.frame objects: must one 'rows', 'columns' 'values' null encode NULL values within list: must one 'null' 'list' na print NA values: must one 'null' 'string'. Defaults class specific auto_unbox automatically unbox() atomic vectors length 1. usually safer avoid instead use unbox() function unbox individual elements. exception objects class AsIs (.e. wrapped ()) automatically unboxed. way mark single values length-1 arrays. digits max number decimal digits print numeric values. Use () specify significant digits. Use NA max precision. use_signif Passed print method. force unclass/skip objects classes defined JSON mapping POSIXt encode POSIXt (datetime) objects: must one 'string', 'ISO8601', 'epoch' 'mongo' UTC Passed print method. rownames Passed print method. keep_vec_names Passed print method. strict_atomic Used deal atomic vectors /unboxing.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-shiny_toJSON.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep data for javascript — .shiny_toJSON","text":"Jsonified text.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure cookie attributes are valid — .validate_attributes","title":"Ensure cookie attributes are valid — .validate_attributes","text":"Ensure cookie attributes valid","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure cookie attributes are valid — .validate_attributes","text":"","code":".validate_attributes(   expiration,   secure_only,   domain,   path,   same_site,   http_only )"},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure cookie attributes are valid — .validate_attributes","text":"expiration Days cookie expire. remove HttpOnly cookie, send negative value attribute. secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost). domain host cookie sent (including subdomains). NULL (default) cookie sent host page cookie set (including subdomains). path path must exist requested URL browser send cookie. Includes subdirectories. same_site One \"strict\", \"lax\" (default), \"none\", indicating cookie sent. same_site = \"none\", secure_only must TRUE. http_only Logical indicating whether cookie sent part HTTP request. FALSE (default), cookie accessible JavaScript via Document.cookie property.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure cookie attributes are valid — .validate_attributes","text":"list attributes.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure domain is valid — .validate_domain","title":"Ensure domain is valid — .validate_domain","text":"Ensure domain valid","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_domain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure domain is valid — .validate_domain","text":"","code":".validate_domain(domain)"},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure domain is valid — .validate_domain","text":"domain host cookie sent (including subdomains). NULL (default) cookie sent host page cookie set (including subdomains).","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_domain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure domain is valid — .validate_domain","text":"NULL domain character.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_expiration.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure expiration is valid — .validate_expiration","title":"Ensure expiration is valid — .validate_expiration","text":"Ensure expiration valid","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_expiration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure expiration is valid — .validate_expiration","text":"","code":".validate_expiration(expiration)"},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_expiration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure expiration is valid — .validate_expiration","text":"expiration Days cookie expire. remove HttpOnly cookie, send negative value attribute.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_expiration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure expiration is valid — .validate_expiration","text":"NULL expiration double.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_http_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure http_only is valid — .validate_http_only","title":"Ensure http_only is valid — .validate_http_only","text":"Ensure http_only valid","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_http_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure http_only is valid — .validate_http_only","text":"","code":".validate_http_only(http_only)"},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_http_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure http_only is valid — .validate_http_only","text":"http_only Logical indicating whether cookie sent part HTTP request. FALSE (default), cookie accessible JavaScript via Document.cookie property.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_http_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure http_only is valid — .validate_http_only","text":"NULL TRUE.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_logical_scalar.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure the argument is a single logical value — .validate_logical_scalar","title":"Ensure the argument is a single logical value — .validate_logical_scalar","text":"Ensure argument single logical value","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_logical_scalar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure the argument is a single logical value — .validate_logical_scalar","text":"","code":".validate_logical_scalar(arg_value, arg_name)"},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_logical_scalar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure the argument is a single logical value — .validate_logical_scalar","text":"arg_value value argument. arg_name name argument error messages.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_logical_scalar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure the argument is a single logical value — .validate_logical_scalar","text":"NULL TRUE.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure path is valid — .validate_path","title":"Ensure path is valid — .validate_path","text":"Ensure path valid","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure path is valid — .validate_path","text":"","code":".validate_path(path)"},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure path is valid — .validate_path","text":"path path must exist requested URL browser send cookie. Includes subdirectories.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure path is valid — .validate_path","text":"NULL path character.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_same_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure same_site is valid — .validate_same_site","title":"Ensure same_site is valid — .validate_same_site","text":"Ensure same_site valid","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_same_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure same_site is valid — .validate_same_site","text":"","code":".validate_same_site(same_site, secure_only)"},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_same_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure same_site is valid — .validate_same_site","text":"same_site One \"strict\", \"lax\" (default), \"none\", indicating cookie sent. same_site = \"none\", secure_only must TRUE. secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost).","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_same_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure same_site is valid — .validate_same_site","text":"One NULL, \"Strict\", \"Lax\", \"None\".","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_scalar.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure the argument is a single logical value — .validate_scalar","title":"Ensure the argument is a single logical value — .validate_scalar","text":"Ensure argument single logical value","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_scalar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure the argument is a single logical value — .validate_scalar","text":"","code":".validate_scalar(arg_value, arg_name, arg_type = \"logical\")"},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_scalar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure the argument is a single logical value — .validate_scalar","text":"arg_value value argument. arg_name name argument error messages. arg_type expected class error messages.","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_scalar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure the argument is a single logical value — .validate_scalar","text":"value (length-1).","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_secure_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure secure_only is valid — .validate_secure_only","title":"Ensure secure_only is valid — .validate_secure_only","text":"Ensure secure_only valid","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_secure_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure secure_only is valid — .validate_secure_only","text":"","code":".validate_secure_only(secure_only)"},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_secure_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure secure_only is valid — .validate_secure_only","text":"secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost).","code":""},{"path":"https://r4ds.github.io/cookies/reference/dot-validate_secure_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure secure_only is valid — .validate_secure_only","text":"NULL TRUE.","code":""},{"path":"https://r4ds.github.io/cookies/reference/extract_cookie.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract an individual cookie from a shiny request — extract_cookie","title":"Extract an individual cookie from a shiny request — extract_cookie","text":"shiny request object includes cookies available app. function extracts value named cookie request.","code":""},{"path":"https://r4ds.github.io/cookies/reference/extract_cookie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract an individual cookie from a shiny request — extract_cookie","text":"","code":"extract_cookie(request, cookie_name, missing = NULL)"},{"path":"https://r4ds.github.io/cookies/reference/extract_cookie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract an individual cookie from a shiny request — extract_cookie","text":"request shiny request object. cookie_name name cookie. Can contain US-ASCII characters except : control character, space, tab, separator characters like ( ) < > @ , ; : \\ \" / [ ] ? = { }. missing value return requested cookie stored request. Defaults NULL.","code":""},{"path":"https://r4ds.github.io/cookies/reference/extract_cookie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract an individual cookie from a shiny request — extract_cookie","text":"contents cookie.","code":""},{"path":"https://r4ds.github.io/cookies/reference/extract_cookie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract an individual cookie from a shiny request — extract_cookie","text":"","code":"req <- list(HTTP_COOKIE = \"cookie1=expected_value; cookie2=1; cookie3=2\") extract_cookie(req, \"cookie1\") #> [1] \"expected_value\" extract_cookie(req, \"cookie2\") #> [1] \"1\" extract_cookie(list(), \"cookie1\") #> NULL extract_cookie(NULL, \"cookie1\") #> NULL"},{"path":"https://r4ds.github.io/cookies/reference/extract_cookies.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract all cookies from a shiny request — extract_cookies","title":"Extract all cookies from a shiny request — extract_cookies","text":"shiny request object includes cookies available app. function extracts cookies named list.","code":""},{"path":"https://r4ds.github.io/cookies/reference/extract_cookies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract all cookies from a shiny request — extract_cookies","text":"","code":"extract_cookies(request)"},{"path":"https://r4ds.github.io/cookies/reference/extract_cookies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract all cookies from a shiny request — extract_cookies","text":"request shiny request object.","code":""},{"path":"https://r4ds.github.io/cookies/reference/extract_cookies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract all cookies from a shiny request — extract_cookies","text":"cookies request, list.","code":""},{"path":"https://r4ds.github.io/cookies/reference/extract_cookies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract all cookies from a shiny request — extract_cookies","text":"","code":"req <- list(HTTP_COOKIE = \"cookie1=expected_value; cookie2=1; cookie3=2\") extract_cookies(req) #> $cookie1 #> [1] \"expected_value\" #>  #> $cookie2 #> [1] \"1\" #>  #> $cookie3 #> [1] \"2\" #>  extract_cookies(list()) #> NULL extract_cookies(NULL) #> NULL"},{"path":"https://r4ds.github.io/cookies/reference/get_cookie.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a cookie — get_cookie","title":"Read a cookie — get_cookie","text":"Read cookie input object.","code":""},{"path":"https://r4ds.github.io/cookies/reference/get_cookie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a cookie — get_cookie","text":"","code":"get_cookie(   cookie_name,   missing = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://r4ds.github.io/cookies/reference/get_cookie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a cookie — get_cookie","text":"cookie_name name cookie. Can contain US-ASCII characters except : control character, space, tab, separator characters like ( ) < > @ , ; : \\ \" / [ ] ? = { }. missing value return requested cookie exist. Defaults NULL. session Shiny session cookies can found (default probably always used).","code":""},{"path":"https://r4ds.github.io/cookies/reference/get_cookie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a cookie — get_cookie","text":"character value cookie.","code":""},{"path":"https://r4ds.github.io/cookies/reference/get_cookie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a cookie — get_cookie","text":"","code":"server <- function(input, output, session) {   get_cookie(\"my_cookie\") }"},{"path":"https://r4ds.github.io/cookies/reference/remove_cookie.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a cookie — remove_cookie","title":"Remove a cookie — remove_cookie","text":"Instruct user's browser remove cookie via JavaScript.","code":""},{"path":"https://r4ds.github.io/cookies/reference/remove_cookie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a cookie — remove_cookie","text":"","code":"remove_cookie(cookie_name, session = shiny::getDefaultReactiveDomain())"},{"path":"https://r4ds.github.io/cookies/reference/remove_cookie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a cookie — remove_cookie","text":"cookie_name name cookie. Can contain US-ASCII characters except : control character, space, tab, separator characters like ( ) < > @ , ; : \\ \" / [ ] ? = { }. session Shiny session cookies can found (default probably always used).","code":""},{"path":"https://r4ds.github.io/cookies/reference/remove_cookie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a cookie — remove_cookie","text":"call session$sendCustomMessage() removes targeted cookie.","code":""},{"path":"https://r4ds.github.io/cookies/reference/remove_cookie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a cookie — remove_cookie","text":"","code":"server <- function(input, output, server) {   shiny::observeEvent(     input$button_that_removes_cookie,     remove_cookie(\"my_cookie\")   ) }"},{"path":"https://r4ds.github.io/cookies/reference/set_cookie.html","id":null,"dir":"Reference","previous_headings":"","what":"Create or update a cookie — set_cookie","title":"Create or update a cookie — set_cookie","text":"Instruct user's browser create cookie via JavaScript.","code":""},{"path":"https://r4ds.github.io/cookies/reference/set_cookie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create or update a cookie — set_cookie","text":"","code":"set_cookie(   cookie_name,   cookie_value,   expiration = 90,   secure_only = NULL,   domain = NULL,   path = NULL,   same_site = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://r4ds.github.io/cookies/reference/set_cookie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create or update a cookie — set_cookie","text":"cookie_name name cookie. Can contain US-ASCII characters except : control character, space, tab, separator characters like ( ) < > @ , ; : \\ \" / [ ] ? = { }. cookie_value contents cookie single character value. expiration Days cookie expire. remove HttpOnly cookie, send negative value attribute. secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost). domain host cookie sent (including subdomains). NULL (default) cookie sent host page cookie set (including subdomains). path path must exist requested URL browser send cookie. Includes subdirectories. same_site One \"strict\", \"lax\" (default), \"none\", indicating cookie sent. same_site = \"none\", secure_only must TRUE. session Shiny session cookies can found (default probably always used).","code":""},{"path":"https://r4ds.github.io/cookies/reference/set_cookie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create or update a cookie — set_cookie","text":"call session$sendCustomMessage() sets targeted cookie.","code":""},{"path":"https://r4ds.github.io/cookies/reference/set_cookie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create or update a cookie — set_cookie","text":"","code":"server <- function(input, output, server) {   shiny::observeEvent(     input$button_that_sets_cookie,     set_cookie(       \"my_cookie\",       \"the value of this cookie\"     )   ) }"},{"path":"https://r4ds.github.io/cookies/reference/set_cookie_on_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny tag to add cookies on page load — set_cookie_on_load","title":"Shiny tag to add cookies on page load — set_cookie_on_load","text":"Generate shiny::tagList() uses JavaScript set cookie user's browser shiny app loads.","code":""},{"path":"https://r4ds.github.io/cookies/reference/set_cookie_on_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny tag to add cookies on page load — set_cookie_on_load","text":"","code":"set_cookie_on_load(   cookie_name,   cookie_value,   expiration = 90,   secure_only = NULL,   domain = NULL,   path = NULL,   same_site = NULL )"},{"path":"https://r4ds.github.io/cookies/reference/set_cookie_on_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny tag to add cookies on page load — set_cookie_on_load","text":"cookie_name name cookie. Can contain US-ASCII characters except : control character, space, tab, separator characters like ( ) < > @ , ; : \\ \" / [ ] ? = { }. cookie_value contents cookie single character value. expiration Days cookie expire. remove HttpOnly cookie, send negative value attribute. secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost). domain host cookie sent (including subdomains). NULL (default) cookie sent host page cookie set (including subdomains). path path must exist requested URL browser send cookie. Includes subdirectories. same_site One \"strict\", \"lax\" (default), \"none\", indicating cookie sent. same_site = \"none\", secure_only must TRUE.","code":""},{"path":"https://r4ds.github.io/cookies/reference/set_cookie_on_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny tag to add cookies on page load — set_cookie_on_load","text":"shiny::tagList() provides HTML javascript set cookie.","code":""},{"path":"https://r4ds.github.io/cookies/reference/set_cookie_on_load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny tag to add cookies on page load — set_cookie_on_load","text":"","code":"set_cookie_on_load(\"my_cookie\", \"contents of my cookie\") #> <script>Cookies.set(\"my_cookie\", \"contents of my cookie\", {\"expires\":90});<\/script> set_cookie_on_load(\"my_cookie\", \"contents of my cookie\", expiration = 10) #> <script>Cookies.set(\"my_cookie\", \"contents of my cookie\", {\"expires\":10});<\/script>"},{"path":"https://r4ds.github.io/cookies/reference/set_cookie_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Set cookie via HTTP header — set_cookie_response","title":"Set cookie via HTTP header — set_cookie_response","text":"Send shiny::httpResponse() sets cookie user's browser. Note return full shiny ui.","code":""},{"path":"https://r4ds.github.io/cookies/reference/set_cookie_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set cookie via HTTP header — set_cookie_response","text":"","code":"set_cookie_response(   cookie_name,   cookie_value,   expiration = 90,   secure_only = NULL,   domain = NULL,   path = NULL,   same_site = NULL,   http_only = FALSE,   redirect = NULL,   ... )"},{"path":"https://r4ds.github.io/cookies/reference/set_cookie_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set cookie via HTTP header — set_cookie_response","text":"cookie_name name cookie. Can contain US-ASCII characters except : control character, space, tab, separator characters like ( ) < > @ , ; : \\ \" / [ ] ? = { }. cookie_value contents cookie single character value. expiration Days cookie expire. remove HttpOnly cookie, send negative value attribute. secure_only Logical indicating whether cookie accessible via secure (https:) requests (except localhost). domain host cookie sent (including subdomains). NULL (default) cookie sent host page cookie set (including subdomains). path path must exist requested URL browser send cookie. Includes subdirectories. same_site One \"strict\", \"lax\" (default), \"none\", indicating cookie sent. same_site = \"none\", secure_only must TRUE. http_only Logical indicating whether cookie sent part HTTP request. FALSE (default), cookie accessible JavaScript via Document.cookie property. redirect relative absolute URL user sent next. typical case URL minus query parameter triggered Set-cookie response. ... Additional parameters passed shiny::httpResponse().","code":""},{"path":"https://r4ds.github.io/cookies/reference/set_cookie_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set cookie via HTTP header — set_cookie_response","text":"shiny::httpResponse() sets cookie.","code":""},{"path":"https://r4ds.github.io/cookies/reference/set_cookie_response.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set cookie via HTTP header — set_cookie_response","text":"","code":"set_cookie_response(\"my_cookie\", \"contents of my cookie\") #> $status #> [1] 200 #>  #> $content_type #> [1] \"text/html; charset=UTF-8\" #>  #> $content #> [1] \"\" #>  #> $headers #> $headers$`Set-cookie` #> my_cookie=contents%20of%20my%20cookie; Expires=Sun, 31 Dec 2023 15:54:34 GMT #>  #> $headers$`X-UA-Compatible` #> [1] \"IE=edge,chrome=1\" #>  #>  #> attr(,\"class\") #> [1] \"httpResponse\" set_cookie_response(\"my_cookie\", \"contents of my cookie\", expiration = 10) #> $status #> [1] 200 #>  #> $content_type #> [1] \"text/html; charset=UTF-8\" #>  #> $content #> [1] \"\" #>  #> $headers #> $headers$`Set-cookie` #> my_cookie=contents%20of%20my%20cookie; Expires=Thu, 12 Oct 2023 15:54:34 GMT #>  #> $headers$`X-UA-Compatible` #> [1] \"IE=edge,chrome=1\" #>  #>  #> attr(,\"class\") #> [1] \"httpResponse\" set_cookie_response(   \"my_cookie\", \"contents of my cookie\",   content = \"Your cookie is set.\" ) #> $status #> [1] 200 #>  #> $content_type #> [1] \"text/html; charset=UTF-8\" #>  #> $content #> [1] \"Your cookie is set.\" #>  #> $headers #> $headers$`Set-cookie` #> my_cookie=contents%20of%20my%20cookie; Expires=Sun, 31 Dec 2023 15:54:34 GMT #>  #> $headers$`X-UA-Compatible` #> [1] \"IE=edge,chrome=1\" #>  #>  #> attr(,\"class\") #> [1] \"httpResponse\" set_cookie_response(   \"my_cookie\", \"contents of my cookie\",   redirect = \"/\" ) #> $status #> [1] 302 #>  #> $content_type #> [1] \"text/html; charset=UTF-8\" #>  #> $content #> [1] \"\" #>  #> $headers #> $headers$`Set-cookie` #> my_cookie=contents%20of%20my%20cookie; Expires=Sun, 31 Dec 2023 15:54:34 GMT #>  #> $headers$Location #> [1] \"/\" #>  #> $headers$`X-UA-Compatible` #> [1] \"IE=edge,chrome=1\" #>  #>  #> attr(,\"class\") #> [1] \"httpResponse\""},{"path":"https://r4ds.github.io/cookies/news/index.html","id":"cookies-023","dir":"Changelog","previous_headings":"","what":"cookies 0.2.3","title":"cookies 0.2.3","text":"Better handling race-time conditions R JavaScript (#63). Cleaner tests.","code":""},{"path":"https://r4ds.github.io/cookies/news/index.html","id":"cookies-022","dir":"Changelog","previous_headings":"","what":"cookies 0.2.2","title":"cookies 0.2.2","text":"CRAN release: 2023-03-15 Updated cookie handling allow HttpOnly cookies mixed JavaScript cookies, improved error messages (#54). Updated cookie handling find cookies even call comes inside module (#56).","code":""},{"path":"https://r4ds.github.io/cookies/news/index.html","id":"cookies-021","dir":"Changelog","previous_headings":"","what":"cookies 0.2.1","title":"cookies 0.2.1","text":"CRAN release: 2023-01-10 underlying ‘js-cookie’ JavaScript library now loads source available (#42). Clarified help cookie_dependency() add_cookie_handlers(), hopefully make clearer can applied situation (#37). Updated get_cookie() properly update cookie deleted session available start session.","code":""},{"path":"https://r4ds.github.io/cookies/news/index.html","id":"cookies-020","dir":"Changelog","previous_headings":"","what":"cookies 0.2.0","title":"cookies 0.2.0","text":"CRAN release: 2022-11-30 Added get_cookie() easily get cookies within server (#32). Added missing parameter get_cookie() extract_cookie() cookie doesn’t exist (@jnolis, #38). Changed default behavior missing cookies NA NULL line R convention (@jnolis).","code":""},{"path":"https://r4ds.github.io/cookies/news/index.html","id":"cookies-011","dir":"Changelog","previous_headings":"","what":"cookies 0.1.1","title":"cookies 0.1.1","text":"CRAN release: 2022-11-01 Updated test. user-facing changes.","code":""},{"path":"https://r4ds.github.io/cookies/news/index.html","id":"cookies-010","dir":"Changelog","previous_headings":"","what":"cookies 0.1.0","title":"cookies 0.1.0","text":"CRAN release: 2022-11-01 Initial CRAN release. Added set_cookie_response() set remove cookies using -secure HTTP responses (#10, #17, #21, #22). Added set_cookie() remove_cookie() handle cookies server (using JavaScript) (#5, #6). Added set_cookie_on_load() set cookie shiny app loads (#4). Added add_cookie_handlers() wrap shiny ui add cookie functionality (#3). Added extract_cookie() extract_cookies() extract cookies request object.","code":""}]
